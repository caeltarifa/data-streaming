trigger:
- main

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: '998b1584-7f39-482f-90e9-36e1e1b81dcc'

  # Web app name
  webAppName: ''

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Environment name
  environmentName: ''

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

  pythonVersion: '3.11'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'

    - script: |
        python -m venv antenv
        source antenv/bin/activate
        python -m pip install --upgrade pip
        pip install setup
        pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: "Install requirements"

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool:
      vmImage: $(vmImageName)
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(pythonVersion)'
            displayName: 'Use Python version'
          - task: DockerCompose@1
            inputs:
              containerregistrytype: 'Azure Container Registry'
              azureSubscription: 'Azure subscription 1 (d317ca60-85fc-43d4-8b5e-ebcc1fa216de)'
              azureContainerRegistry: '{"loginServer":"analyticsrepository.azurecr.io", "id" : "/subscriptions/d317ca60-85fc-43d4-8b5e-ebcc1fa216de/resourceGroups/data-generator-RG/providers/Microsoft.ContainerRegistry/registries/analyticsrepository"}'
              dockerComposeFile: '**/docker-compose.yml'
              action: 'Run a Docker Compose command'